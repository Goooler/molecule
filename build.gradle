buildscript {
  ext.versions = [
    'compileSdk': 30,
    'minSdk': 21,
    'compose': '1.0.0-rc01',
    'coroutines': '1.5.0',
  ]
  ext.deps = [
    'compose': [
      'compiler': "androidx.compose.compiler:compiler:${versions.compose}",
      'runtime': "androidx.compose.runtime:runtime:${versions.compose}",
    ],
    'kotlinx': [
      'coroutines': [
        'core': "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}",
        'rx2': "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:${versions.coroutines}",
        'rx3': "org.jetbrains.kotlinx:kotlinx-coroutines-rx3:${versions.coroutines}",
      ],
    ],
    'androidx': [
      'core': 'androidx.core:core-ktx:1.2.0',
      'test': [
        'runner': 'androidx.test:runner:1.2.0',
      ],
    ],
    'junit': 'junit:junit:4.13.2',
    'turbine': 'app.cash.turbine:turbine:0.5.2',
    'rxjava2': 'io.reactivex.rxjava2:rxjava:2.2.21',
    'rxjava3': 'io.reactivex.rxjava3:rxjava:3.0.13',
  ]

  dependencies {
    classpath 'com.android.tools.build:gradle:4.2.2'
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.10'
    classpath 'com.vanniktech:gradle-maven-publish-plugin:0.14.2'
    classpath 'org.jetbrains.dokka:dokka-gradle-plugin:1.4.32'
    classpath 'com.diffplug.spotless:spotless-plugin-gradle:5.12.4'
  }

  repositories {
    mavenCentral()
    google()
  }
}

apply plugin: 'org.jetbrains.dokka'

allprojects {
  repositories {
    mavenCentral()
    google()
  }
}

subprojects {
  tasks.withType(Test).configureEach {
    testLogging {
      if (System.getenv("CI") == "true") {
        events = ["failed", "skipped", "passed"]
      }
      exceptionFormat "full"
    }
  }

  plugins.withId('java-base') {
    java {
      toolchain {
        languageVersion = JavaLanguageVersion.of(8)
      }
    }
  }

  tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompile).configureEach { task ->
    task.kotlinOptions {
      jvmTarget = '1.8'
    }
  }

  plugins.withType(com.android.build.gradle.BasePlugin).configureEach { plugin ->
    def android = plugin.extension
    android.compileSdkVersion versions.compileSdk
    android.defaultConfig {
      minSdkVersion versions.minSdk
    }
    android.lintOptions {
      checkDependencies true
      checkReleaseBuilds false // Full lint runs as part of 'build' task.
    }
  }

  apply plugin: 'com.diffplug.spotless'
  spotless {
    kotlin {
      target("src/**/*.kt")
      licenseHeaderFile(rootProject.file('gradle/license-header.txt'))
      // Spotless doesn't read .editorconfig yet: https://github.com/diffplug/spotless/issues/142
      ktlint('0.41.0').userData([
        'insert_final_newline': 'true',
        'end_of_line': 'lf',
        'charset': 'utf-8',
        'indent_size': '2',
        'ij_kotlin_imports_layout': '*',
      ])
    }
  }
}
